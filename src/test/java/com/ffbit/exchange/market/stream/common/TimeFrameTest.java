package com.ffbit.exchange.market.stream.common;

import junitparams.JUnitParamsRunner;
import junitparams.Parameters;
import org.junit.Test;
import org.junit.runner.RunWith;

import java.time.OffsetDateTime;

import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertThat;

@RunWith(JUnitParamsRunner.class)
public class TimeFrameTest {

    @Test
    @Parameters({
            "M1, 2015-01-02T03:04:05.001+02:00, 2015-01-02T03:04:00.000+02:00",

            "M2, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M2, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M2, 2015-01-02T03:02:02.002+02:00, 2015-01-02T03:02:00.000+02:00",
            "M2, 2015-01-02T03:03:03.002+02:00, 2015-01-02T03:02:00.000+02:00",

            "M3, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M3, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M3, 2015-01-02T03:02:02.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M3, 2015-01-02T03:03:03.002+02:00, 2015-01-02T03:03:00.000+02:00",

            "M4, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M4, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M4, 2015-01-02T03:02:02.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M4, 2015-01-02T03:03:03.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M4, 2015-01-02T03:04:04.002+02:00, 2015-01-02T03:04:00.000+02:00",

            "M5, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M5, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M5, 2015-01-02T03:02:02.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M5, 2015-01-02T03:03:03.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M5, 2015-01-02T03:04:04.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M5, 2015-01-02T03:05:05.002+02:00, 2015-01-02T03:05:00.000+02:00",

            "M6, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:02:02.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:03:03.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:04:04.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:05:05.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M6, 2015-01-02T03:06:06.002+02:00, 2015-01-02T03:06:00.000+02:00",

            "M10, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M10, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M10, 2015-01-02T03:09:09.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M10, 2015-01-02T03:10:10.002+02:00, 2015-01-02T03:10:00.000+02:00",
            "M10, 2015-01-02T03:11:11.002+02:00, 2015-01-02T03:10:00.000+02:00",
            "M10, 2015-01-02T03:15:15.002+02:00, 2015-01-02T03:10:00.000+02:00",
            "M10, 2015-01-02T03:20:20.002+02:00, 2015-01-02T03:20:00.000+02:00",

            "M15, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M15, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M15, 2015-01-02T03:11:11.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M15, 2015-01-02T03:15:15.002+02:00, 2015-01-02T03:15:00.000+02:00",
            "M15, 2015-01-02T03:20:20.002+02:00, 2015-01-02T03:15:00.000+02:00",
            "M15, 2015-01-02T03:31:30.002+02:00, 2015-01-02T03:30:00.000+02:00",

            "M30, 2015-01-02T03:00:00.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M30, 2015-01-02T03:01:01.002+02:00, 2015-01-02T03:00:00.000+02:00",
            "M30, 2015-01-02T03:30:30.002+02:00, 2015-01-02T03:30:00.000+02:00",
            "M30, 2015-01-02T03:31:31.002+02:00, 2015-01-02T03:30:00.000+02:00",
            "M30, 2015-01-02T03:59:59.002+02:00, 2015-01-02T03:30:00.000+02:00",

            "H1, 2015-01-02T03:04:05.001+02:00, 2015-01-02T03:00:00.000+02:00",

            "H4, 2015-01-02T00:00:00.002+02:00, 2015-01-02T00:00:00.000+02:00",
            "H4, 2015-01-02T01:01:01.002+02:00, 2015-01-02T00:00:00.000+02:00",
            "H4, 2015-01-02T02:02:02.002+02:00, 2015-01-02T00:00:00.000+02:00",
            "H4, 2015-01-02T03:03:03.002+02:00, 2015-01-02T00:00:00.000+02:00",
            "H4, 2015-01-02T04:04:04.002+02:00, 2015-01-02T04:00:00.000+02:00",

            "D1, 2015-01-02T03:04:05.001+02:00, 2015-01-02T00:00:00.000+02:00",

            "W1, 2015-01-02T03:04:05.001+02:00, 2014-12-29T00:00:00.000+02:00",
            "W1, 2015-01-04T03:04:05.001+02:00, 2014-12-29T00:00:00.000+02:00",
            "W1, 2015-01-05T03:04:05.001+02:00, 2015-01-05T00:00:00.000+02:00",
            "W1, 2015-01-08T03:04:05.001+02:00, 2015-01-05T00:00:00.000+02:00",

            "MN, 2015-01-02T03:04:05.001+02:00, 2015-01-01T00:00:00.000+02:00",
    })
    public void itShouldAdjust(TimeFrame timeFrame, String original, String adjusted) {
        assertThat("Adjustment mismatch for " + timeFrame,
                timeFrame.adjust(OffsetDateTime.parse(original)),
                is(OffsetDateTime.parse(adjusted)));
    }

}
